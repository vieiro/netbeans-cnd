/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.netbeans.modules.cnd.debugger.common2.ui.processlist;

import java.util.Collection;
import javax.swing.SwingUtilities;
import org.netbeans.modules.cnd.debugger.common2.debugger.processlist.api.ProcessInfo;
import org.netbeans.modules.cnd.debugger.common2.debugger.processlist.api.ProcessInfoDescriptor;
import org.openide.util.Lookup;
import org.openide.util.Lookup.Result;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle;

/**
 *
 */
public class ProcessInfoPanel extends javax.swing.JPanel implements LookupListener {

    private Result<ProcessInfo> lookupResult = null;

    /** Creates new form ProcessInfoPanel */
    public ProcessInfoPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commandLine = new javax.swing.JTextArea();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ProcessInfoPanel.class, "ProcessInfoPanel.jLabel1.text")); // NOI18N

        commandLine.setColumns(20);
        commandLine.setEditable(false);
        commandLine.setLineWrap(true);
        commandLine.setRows(5);
        commandLine.setWrapStyleWord(true);
        commandLine.setOpaque(false);
        jScrollPane1.setViewportView(commandLine);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(327, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void addNotify() {
        super.addNotify();
        Lookup.Provider provider = (Lookup.Provider) SwingUtilities.getAncestorOfClass(Lookup.Provider.class, this);
        if (provider == null) {
            return;
        }
        Lookup lookup = provider.getLookup();
        if (lookup == null) {
            return;
        }
        lookupResult = lookup.lookupResult(ProcessInfo.class);
        if (lookupResult != null) {
            lookupResult.addLookupListener(this);
            lookupResult.allItems();
        }
    }

    @Override
    public void removeNotify() {
        if (lookupResult != null) {
            lookupResult.removeLookupListener(this);
        }
        commandLine.setText(""); // NOI18N
        super.removeNotify();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea commandLine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void resultChanged(LookupEvent ev) {
        Collection<? extends ProcessInfo> data = lookupResult.allInstances();

        if (!data.isEmpty()) {
            ProcessInfo info = data.iterator().next();

            if (info != null) {
                commandLine.setText(info.get(ProcessInfoDescriptor.COMMAND_COLUMN_ID, String.class));
            } else {
                commandLine.setText(NbBundle.getMessage(ProcessInfoPanel.class, "ProcessInfoPanel.commandLine_N_A.text")); // NOI18N
            }
        } else {
            commandLine.setText(""); // NOI18N
        }
    }
}
