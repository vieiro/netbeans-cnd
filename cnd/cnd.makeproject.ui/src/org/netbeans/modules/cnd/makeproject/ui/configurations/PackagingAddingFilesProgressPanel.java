/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.netbeans.modules.cnd.makeproject.ui.configurations;

import javax.swing.JButton;
import javax.swing.SwingUtilities;

/**
 *
 */
public class PackagingAddingFilesProgressPanel extends javax.swing.JPanel {
    private final JButton stopButton;
    private String filename;

    /** Creates new form PackagingAddingFilesProgressPanel */
    public PackagingAddingFilesProgressPanel(JButton stopButton) {
        this.stopButton = stopButton;
        initComponents();
        progressBar.setIndeterminate(true);
        fileTextField.setBackground(getBackground());
    }
    
    public void setProgress(String filename) {
        this.filename = filename;
        try {
            SwingUtilities.invokeAndWait(new Update());
        }
        catch (Exception e) {
        }
    }
    
    class Update implements Runnable {
        @Override
        public void run() {
            fileTextField.setText(filename);
            fileLabel.setText(fileLabel.getText());
        }
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fileLabel = new javax.swing.JLabel();
        fileTextField = new javax.swing.JTextField();
        progressBar = new javax.swing.JProgressBar();

        setLayout(new java.awt.GridBagLayout());

        fileLabel.setLabelFor(fileTextField);
        org.openide.awt.Mnemonics.setLocalizedText(fileLabel, org.openide.util.NbBundle.getMessage(PackagingAddingFilesProgressPanel.class, "PackagingAddingFilesProgressPanel.fileLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 16, 0, 0);
        add(fileLabel, gridBagConstraints);

        fileTextField.setEditable(false);
        fileTextField.setColumns(40);
        fileTextField.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(16, 4, 0, 16);
        add(fileTextField, gridBagConstraints);
        fileTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(PackagingAddingFilesProgressPanel.class, "PackagingAddingFilesProgressPanel.fileTextField.AccessibleContext.accessibleDescription")); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 16, 16, 16);
        add(progressBar, gridBagConstraints);
        progressBar.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(PackagingAddingFilesProgressPanel.class, "PackagingAddingFilesProgressPanel.progressBar.AccessibleContext.accessibleName")); // NOI18N
        progressBar.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(PackagingAddingFilesProgressPanel.class, "PackagingAddingFilesProgressPanel.progressBar.AccessibleContext.accessibleDescription")); // NOI18N

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(PackagingAddingFilesProgressPanel.class, "PackagingAddingFilesProgressPanel.AccessibleContext.accessibleName")); // NOI18N
        getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(PackagingAddingFilesProgressPanel.class, "PackagingAddingFilesProgressPanel.AccessibleContext.accessibleDescription")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileLabel;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables

}
