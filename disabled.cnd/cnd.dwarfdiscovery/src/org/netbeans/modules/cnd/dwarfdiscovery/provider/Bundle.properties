# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Sample ResourceBundle properties file
Binaries_Provider_Name=Analyze Object and Executable Files
Binaries_Provider_Description=Discovery feature analyzes information from object \
 or binary files that were built with debug information. \
 \nUse compile flags "-g3 -gdwarf-2" for GNU compilers.\
 \nUse compile flag "-g" for SUN compilers.\
 \nSome open source projects can be configured with the flags by following command:\
 \nconfigure CFLAGS="-g3 -gdwarf-2" CXXFLAGS="-g3 -gdwarf-2" \
 \nDo not forget to build the project with command: \
 \nmake
Binaries_Files_Name=Binary files
Binaries_Files_Description=List of binary files that were build with debug information

# analyze object files in folder
Folder_Provider_Name=Explore Object Files in Folder
Folder_Provider_Description=IDE explores debugging information in object files.\
 \nSources should be built with debugging information.
Folder_Files_Name=Select &root folder where object files are located:
Folder_Files_Description=Folder where object files with debug information are searched. \
 Make sure that object files contain debug information.

# analyze executable file
Executable_Provider_Name=Explore Executable or Library File
Executable_Provider_Description=IDE explores the debugging information in executable or library file.\
 \nSources should be built with debugging information.
Executable_Files_Name=Select e&xecutable or library file:
Executable_Files_Description=Specify absolute path to the executable or library file with debug information. \
 Make sure that selected file contain debug information.

Libraries_Files_Name=Select additional &library files:
Libraries_Files_Description=Library files with debug information. \
 Make sure that selected files contain debug information.

RESTRICT_COMPILE_ROOT=Restrict discovered sources by source files compile path
RESTRICT_SOURCE_ROOT=Restrict discovered sources by source files path

# analyze make log file
Make_Log_Provider_Name=Explore Build Log File
Make_Log_Provider_Description=IDE explores the the output file of the Build Command (build log).
Make_Log_File_Name=Select build &log file:
Make_Log_File_Description=Specify absolute path to the output file of the Build Command (build log).

# analyze exec log file
Exec_Log_Provider_Name=Explore Build Analyzer Log File
Exec_Log_Provider_Description=IDE explores the the output file of Build Analyzer (exec log) or the compile commands file (compile_commands.json).
Exec_Log_File_Name=Select build analyzer &log file:
Exec_Log_File_Description=Specify absolute path to the output file of Build Analyzer (exec log) or the compile commands file (compile_commands.json).
 
NoExecutable=No binary file in input parameters
NotFoundExecutable=Binary file {0} not found
CannotAnalyzeExecutable=Cannot analyze binary file {0}

NoBaseFolder=No folder in input parameters
CannotAnalyzeFolder=Cannot analyze folder {0}
NotFoundExecutablesInFolder=Binary files in the folder {0} not found
NotFoundExecutableWithDebugInformation=Not found binary file with debug informations in the folder {0}

NotFoundMakeLog=Make log not found
NotFoundExecLog=Exec log not found

FileNotFoundException=File {0} not found
WrongFileFormatException=Unsupported format of binary file {0}
IOException=Cannot read binary file {0} : {1}
Exception=Exception while reading file {0} : {1}
NotFoundDebugInformation=Debug informations in the binary file {0} not found
BadDebugInformation=Source root {0} not found

