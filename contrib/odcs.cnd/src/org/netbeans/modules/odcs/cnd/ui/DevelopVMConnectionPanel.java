/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.netbeans.modules.odcs.cnd.ui;

import javax.swing.JTextField;

/**
 *
 */
public class DevelopVMConnectionPanel extends javax.swing.JPanel {

    /**
     * Creates new form CloudConnectionPanel
     */
    public DevelopVMConnectionPanel(String host) {
        initComponents();

        hostField.setText(host);
    }

    public JTextField getHostField() {
        return hostField;
    }

    public JTextField getUserField() {
        return userField;
    }

    public JTextField getSshField() {
        return sshField;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userLabel = new javax.swing.JLabel();
        hostLabel = new javax.swing.JLabel();
        userField = new javax.swing.JTextField();
        hostField = new javax.swing.JTextField();
        sshLabel = new javax.swing.JLabel();
        sshField = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(200, 100));

        userLabel.setLabelFor(userField);
        org.openide.awt.Mnemonics.setLocalizedText(userLabel, org.openide.util.NbBundle.getMessage(DevelopVMConnectionPanel.class, "DevelopVMConnectionPanel.userLabel.text")); // NOI18N

        hostLabel.setLabelFor(hostField);
        org.openide.awt.Mnemonics.setLocalizedText(hostLabel, org.openide.util.NbBundle.getMessage(DevelopVMConnectionPanel.class, "DevelopVMConnectionPanel.hostLabel.text")); // NOI18N

        userField.setText(org.openide.util.NbBundle.getMessage(DevelopVMConnectionPanel.class, "DevelopVMConnectionPanel.userField.text")); // NOI18N

        hostField.setEditable(false);
        hostField.setText(org.openide.util.NbBundle.getMessage(DevelopVMConnectionPanel.class, "DevelopVMConnectionPanel.hostField.text")); // NOI18N

        sshLabel.setLabelFor(sshField);
        org.openide.awt.Mnemonics.setLocalizedText(sshLabel, org.openide.util.NbBundle.getMessage(DevelopVMConnectionPanel.class, "DevelopVMConnectionPanel.sshLabel.text")); // NOI18N

        sshField.setText(org.openide.util.NbBundle.getMessage(DevelopVMConnectionPanel.class, "DevelopVMConnectionPanel.sshField.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userLabel)
                    .addComponent(hostLabel)
                    .addComponent(sshLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userField)
                    .addComponent(hostField)
                    .addComponent(sshField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostLabel)
                    .addComponent(hostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sshLabel)
                    .addComponent(sshField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField hostField;
    private javax.swing.JLabel hostLabel;
    private javax.swing.JTextField sshField;
    private javax.swing.JLabel sshLabel;
    private javax.swing.JTextField userField;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
