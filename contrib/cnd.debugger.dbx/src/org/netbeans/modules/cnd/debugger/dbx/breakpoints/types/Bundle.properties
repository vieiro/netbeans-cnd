# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

ERR_no_set_til_session=Cannot set breakpoints until the program has been loaded in the debugger

CTL_Line_event_name_Line=Line {0}
CTL_Line_event_name=Line {0}:{1}
CTL_Line_event_type_name=File:Line

CTL_Default=<Default>


#
# Breakpoint displayName formats (name column of the breakpoints window)
#

Handler_Before=Before
Handler_After=After
Handler_read=read
Handler_write=write
Handler_execute=execute
# {0} is class name:
Handler_AllMeth=All methods of {0}
# {0} is method name:
Handler_AllClass={0} in all classes
# {0} is the exception name, or translated "uncaught", "all", or "unexpected":
Handler_Thrown={0} thrown
# {0} is the fault name:
Handler_Fault=Fault {0}
# {0} is the function:
Handler_ReturnFrom=Return from {0}
# {0} is the function:
Handler_AllFunc=All {0}
# {0} is the address:
Handler_Instruction=Instruction at {0}
# {0} is the load object:
Handler_OpenObj=Open of {0}
Handler_CloseObj=Close of {0}
Handler_OpenAllObj=Open Any Load Object
Handler_CloseAllObj=Close Any Load Object
Handler_LwpExit=LWP Exit
# {0} is the object name
Handler_Object=Object {0}
# {0} is the process event, for example, "Step", "Gone":
Handler_ProcessEvent=On Process {0}
# {0} is the debugger event, for example, "Attach", "Detach":
Handler_DebuggerEvent=On Debugger {0}
# {0} is the signal name:
Handler_Signal=Signal {0}
# {0} is the signal name:
# {1} is the subcode:
Handler_Signal_Subcode=Signal {0} {1}
# {0} is the number of seconds for the timer:
Handler_Timer={0} seconds
Handler_SysinAny=Enter any system call
Handler_SysoutAny=Exit any system call
# {0} is the system call name
Handler_Sysin=Enter System Call {0}
Handler_Sysout=Exit System Call {0}
# {0} is the variable
Handler_Variable=Change of {0}

#
# ExceptionBreakpoint
#
PROP_breakpoint_exception_name=Exception name
HINT_breakpoint_exception_name=Exception name

#
# DebuggerBreakpoint
#
LBL_Debugger=Debugger
PROP_breakpoint_debugger_sub_event=Debugger sub event
HINT_breakpoint_debugger_sub_event=Debugger sub event

ENUM_attach=On Attach
ENUM_detach=On Detach

#
# CondBreakpoint
#
PROP_breakpoint_cond_name=Condition
HINT_breakpoint_cond_name=Condition

#
# ClassMethodBreakpoint
#
PROP_breakpoint_classMethod_class=Class name
HINT_breakpoint_classMethod_class=Class name
PROP_breakpoint_classMethod_method=Method name
HINT_breakpoint_classMethod_method=Method name
PROP_breakpoint_classMethod_recurse=Superclasses Also
HINT_breakpoint_classMethod_recurse=Include Methods of Parent Classes

#
# AccessBreakpoint
#
PROP_breakpoint_access_address=Address
HINT_breakpoint_access_address=Address
PROP_breakpoint_access_size=Size
HINT_breakpoint_access_size=Size (bytes)
PROP_breakpoint_access_read=Read access
HINT_breakpoint_access_read=Read access
PROP_breakpoint_access_write=Write access
HINT_breakpoint_access_write=Write access
PROP_breakpoint_access_execute=Access for execution
HINT_breakpoint_access_execute=Access for execution
PROP_breakpoint_access_when=Before or After?
HINT_breakpoint_access_when=Fire event before or after access

#
# LoadObjBreakpoint
#
LBL_LoadObject=LoadObject
PROP_breakpoint_loadObj_name=Loadobject name
HINT_breakpoint_loadObj_name=Loadobject name

PROP_breakpoint_loadObj_open_close=Open or Close?
HINT_breakpoint_loadObj_open_close=Open or Close?

ENUM_open=On Open
ENUM_close=On Close

#
# LwpBreakpoint
#
PROP_breakpoint_lwp_sub_event=LWP Event
HINT_breakpoint_lwp_sub_event=LWP Event

ENUM_exit=On Exit

#
# ObjectBreakpoint
#
PROP_breakpoint_object_addr=Object address
HINT_breakpoint_object_addr=Object address

#
# SignalBreakpoint
#
LBL_Signal=Signal
PROP_breakpoint_signal_name=Signal name or number
HINT_breakpoint_signal_name=Signal name or number
PROP_breakpoint_signal_subcode=Subcode name or number
HINT_breakpoint_signal_subcode=Subcode name or number

#
# SysCallBreakpoint
#
PROP_breakpoint_sysCall_name=System call name or number
HINT_breakpoint_sysCall_name=System call name or number
PROP_breakpoint_sysCall_entry_exit=Fire on entry or exit
HINT_breakpoint_sysCall_entry_exit=Fire on entry or exit

ENUM_exit=On Exit
ENUM_entry=On Entry

#
# VariableBreakpoint
#
LBL_Variable=Variable
PROP_breakpoint_variable_name=Variable expression
HINT_breakpoint_variable_name=Variable expression

#
# ProcessBreakpoint
#
LBL_Process=Process
PROP_breakpoint_process_sub_event=Process sub event
HINT_breakpoint_process_sub_event=Process sub event
PROP_breakpoint_process_exit_code=Process exit code
HINT_breakpoint_process_exit_code=Process exit code

#
# TimerBreakpoint
#
PROP_breakpoint_timer_seconds=Seconds
HINT_breakpoint_timer_seconds=Seconds (floating point value)

LBL_Eventspec=Event specification:
MNEM_Eventspec=E
ACSD_Eventspec=dbx event specification

#
# InfileBreakpoint
#
LBL_Infile=In file
Handler_Infile=In file {0}
CTL_Infile_event_name=In file {0}

LBL_Filename=Filename:
MNEM_Filename=F
ACSD_Filename=file name

# Access Breakpoint
LBL_Access=Access
Address=Address:
MNEM_Address=s
Length=Length:
MNEM_Length=e
When=When:
Before=Before
MNEM_Before=f
After=After
MNEM_After=A
Operation=Operation:
Read=Read
MNEM_Read=R
Write=Write
MNEM_Write=i
Execute=Execute
MNEM_Execute=x

# ClassMethod Breakpoint
LBL_ClassMethod=Class/Method
Class=Class:
IncludeParentMethods=Include Methods of Parent Classes
Method=Method:
MNEM_Class=s
MNEM_IncludeParentMethods=I
MNEM_Method=e

ACSD_Class=Select or type in a class name
ACSD_IncludeParentMethods=Select or type in a method name
ACSD_Method=Include Methods of Parent Classes

ClassMethod_AllClass=All Classes
ClassMethod_AllMethod=All Methods

# Condition Breakpoint
LBL_Condition=Condition
Expression=Expression:
MNEM_Expression=E
ACSD_Expression=Type in a conditional expression

# Exception Breakpoint
LBL_Exception=Exception
Type=Type:
MNEM_Type=e
ACSD_Type=Type in or select a type of exception

# Fault Breakpoint
LBL_Fault=Fault
Fault=Fault:
MNEM_Fault=F
ACSD_Fault=Type in or select a value

# Loadobject Breakpoint
LoadObject=Loadobject:
# moved to ../../props/Bundle.properties
# OnOpen=On Open
# OnClose=On Close
MNEM_LoadObject=a
MNEM_OnOpen=O
MNEM_OnClose=e
ACSD_LoadObject=Loadobject

# LWP Breakpoint
ExitLWP=Exit of LWP:
ExitLWPMnemonic=E

# Object Breakpoint
LBL_Object=Object
AllObjMethods=All Methods Of Object:
IncludeParentClasses=Include Methods of Parent Classes
MNEM_AllObjMethods=A
MNEM_IncludeParentClasses=I
ACSD_Object=Type in object name

# Process Event and Debugger Event Breakpoint
Event=Event:
ExitCode=ExitCode:
MNEM_Event=E
MNEM_ExitCode=X
ACSD_Event=Select an event
ACSD_ExitCode=type in an exit code number

# Signal Breakpoint
Signal=Signal:
Subcode=Subcode:
MNEM_Signal=S
MNEM_Subcode=e
ACSD_Signal=Select a signal
ACSD_Subcode=Select a subcode

# Syscall Breakpoint
LBL_System_Call=System Call
SystemCall=System Call:
# moved to ../../props/Bundle.properties
# OnEntrance=On Entrance
# OnExit=On Exit
MNEM_SystemCall=S
MNEM_OnEntrance=E
MNEM_OnExit=x
ACSD_SystemCall=Type in or select system call

# Timer breakpoint
LBL_Timer=Timer
Seconds=Seconds:
MNEM_Seconds=S
ACSD_Seconds=Type in a time in seconds

# Variable Breakpoint
Variable=Variable:
MNEM_Variable=V
ACSD_Variable=Type in a variable name
